name: Build, Release, and AUR Update

on:
  push:
    tags:
      - '*'  # Trigger on any tag push

jobs:
  build_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.5'

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Install Go dependencies
        run: go mod download

      - name: Run tests
        run: make test

      - name: Static analysis
        run: make check

      - name: Determine Version
        id: determine_version
        shell: bash
        run: |
          # Extract the tag name
          TAG_NAME="${{ github.ref_name }}"  # GitHub provides the tag name directly
          echo "Tag name: $TAG_NAME"

          # Determine if it's a pre-release (starts with 'pre.')
          if [[ "$TAG_NAME" == pre.* ]]; then
            RELEASE_TYPE="prerelease"
          else
            RELEASE_TYPE="release"
          fi

          echo "VERSION=${TAG_NAME}" >> $GITHUB_ENV
          echo "RELEASE_TYPE=${RELEASE_TYPE}" >> $GITHUB_ENV

      - name: Build binaries
        run: make build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ env.VERSION }}"
          name: "${{ env.RELEASE_TYPE == 'release' && 'Release' || 'Pre-release' }} ${{ env.VERSION }}"
          prerelease: ${{ env.RELEASE_TYPE != 'release' }}
          generate_release_notes: true
          target_commitish: release
          files: |
            dist/doot-linux-arm64
            dist/doot-linux-x86_64
            dist/doot-darwin-arm64
            dist/doot-darwin-x86_64
            dist/doot-windows-arm64.exe
            dist/doot-windows-x86_64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate PKGBUILD files from templates
        run: |
          sed "s/{{VERSION}}/${{ env.VERSION }}/g" .github/doot.PKGBUILD.template > doot-PKGBUILD
          sed "s/{{VERSION}}/${{ env.VERSION }}/g" .github/doot-bin.PKGBUILD.template > doot-bin-PKGBUILD
          cp .github/doot-git.PKGBUILD.template doot-git-PKGBUILD

          X86_CHECKSUM=$(sha256sum dist/doot-linux-x86_64 | cut -d ' ' -f 1)
          ARM64_CHECKSUM=$(sha256sum dist/doot-linux-arm64 | cut -d ' ' -f 1)
          sed -i "s/{{X86_CHECKSUM}}/${X86_CHECKSUM}/" doot-bin-PKGBUILD
          sed -i "s/{{ARM64_CHECKSUM}}/${ARM64_CHECKSUM}/" doot-bin-PKGBUILD

      - name: Upload PKGBUILD Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pkgbuilds
          path: |
            doot-PKGBUILD
            doot-git-PKGBUILD
            doot-bin-PKGBUILD

      - name: Publish AUR package (doot)
        uses: KSXGitHub/github-actions-deploy-aur@v3.0.1
        if: ${{ env.RELEASE_TYPE == 'release' }}
        with:
          pkgname: doot
          pkgbuild: ./doot-PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Update AUR package to version ${{ env.VERSION }}"
          ssh_keyscan_types: rsa,ecdsa,ed25519

      - name: Publish AUR package (doot-bin)
        uses: KSXGitHub/github-actions-deploy-aur@v3.0.1
        if: ${{ env.RELEASE_TYPE == 'release' }}
        with:
          pkgname: doot-bin
          pkgbuild: ./doot-bin-PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Update AUR package to version ${{ env.VERSION }}"
          ssh_keyscan_types: rsa,ecdsa,ed25519
