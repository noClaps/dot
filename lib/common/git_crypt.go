package common

import (
	"os"
	"path/filepath"
	"strings"

	. "github.com/pol-rivero/doot/lib/types"
)

var GIT_CRYPT_KEY_PATH = RelativePath(filepath.Join(".git", "git-crypt", "keys", "default"))
var GITATTRIBUTES_PATH = RelativePath(filepath.Join(".git", "info", "attributes"))

var GITATTRIBUTES_CONTENT = `# Auto-generated by 'doot crypt init'. Do not edit.
**/*.doot-crypt filter=git-crypt diff=git-crypt
**/*.doot-crypt.* filter=git-crypt diff=git-crypt
**/*.doot-crypt/** filter=git-crypt diff=git-crypt
**/*.doot-crypt.*/** filter=git-crypt diff=git-crypt
# End of 'doot crypt init'`

func GitCryptIsInitialized(dotfilesDir AbsolutePath) bool {
	return gitCryptKeyExists(dotfilesDir) && gitattributesIsSet(dotfilesDir)
}

func gitCryptKeyExists(dotfilesDir AbsolutePath) bool {
	keyPath := dotfilesDir.JoinPath(GIT_CRYPT_KEY_PATH)
	fileInfo, err := os.Stat(keyPath.Str())
	return err == nil && fileInfo.Mode().IsRegular()
}

func gitattributesIsSet(dotfilesDir AbsolutePath) bool {
	attributesPath := dotfilesDir.JoinPath(GITATTRIBUTES_PATH)
	attributesContent, err := os.ReadFile(attributesPath.Str())
	if err != nil {
		return false
	}
	return strings.Contains(string(attributesContent), GITATTRIBUTES_CONTENT)
}
